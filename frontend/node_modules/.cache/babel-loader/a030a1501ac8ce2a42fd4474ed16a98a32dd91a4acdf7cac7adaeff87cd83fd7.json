{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000';\nconst processTransaction = async transaction => {\n  return new Promise((resolve, reject) => {\n    console.log('Transaction processing started for:', transaction);\n\n    // Simulate long running process\n    setTimeout(() => {\n      // After 30 seconds, we assume the transaction is processed successfully\n      console.log('transaction processed for:', transaction);\n      resolve(transaction);\n    }, 30000); // 30 seconds\n  });\n};\nconst sendMoney = async amount => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.post(`${API_URL}/send`, {\n      amount\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error sending money:', error);\n    throw error;\n  }\n};\nconst withdrawMoney = async amount => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.post(`${API_URL}/withdraw`, {\n      amount\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error withdrawing money:', error);\n    throw error;\n  }\n};\nconst getAccounts = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/accounts`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching accounts:', error);\n    throw error;\n  }\n};\nconst getTransactions = async accountId => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/transactions/${accountId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching transactions:', error);\n    throw error;\n  }\n};\nexport { processTransaction, sendMoney, withdrawMoney, getAccounts, getTransactions };","map":{"version":3,"names":["axios","API_URL","processTransaction","transaction","Promise","resolve","reject","console","log","setTimeout","sendMoney","amount","token","localStorage","getItem","response","post","headers","Authorization","data","error","withdrawMoney","getAccounts","get","getTransactions","accountId"],"sources":["E:/payment-gateway/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000'; \r\n\r\nconst processTransaction = async (transaction) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log('Transaction processing started for:', transaction);\r\n\r\n    // Simulate long running process\r\n    setTimeout(() => {\r\n      // After 30 seconds, we assume the transaction is processed successfully\r\n      console.log('transaction processed for:', transaction);\r\n      resolve(transaction);\r\n    }, 30000); // 30 seconds\r\n  });\r\n};\r\n\r\nconst sendMoney = async (amount) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.post(\r\n      `${API_URL}/send`,\r\n      { amount },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error sending money:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst withdrawMoney = async (amount) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.post(\r\n      `${API_URL}/withdraw`,\r\n      { amount },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error withdrawing money:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getAccounts = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.get(`${API_URL}/accounts`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching accounts:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getTransactions = async (accountId) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.get(`${API_URL}/transactions/${accountId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching transactions:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport { processTransaction, sendMoney, withdrawMoney, getAccounts, getTransactions };\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,kBAAkB,GAAG,MAAOC,WAAW,IAAK;EAChD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEL,WAAW,CAAC;;IAE/D;IACAM,UAAU,CAAC,MAAM;MACf;MACAF,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,WAAW,CAAC;MACtDE,OAAO,CAACF,WAAW,CAAC;IACtB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EACb,CAAC,CAAC;AACJ,CAAC;AAED,MAAMO,SAAS,GAAG,MAAOC,MAAM,IAAK;EAClC,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC/B,GAAGf,OAAO,OAAO,EACjB;MAAEU;IAAO,CAAC,EACV;MACEM,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK;MAChC;IACF,CACF,CAAC;IACD,OAAOG,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMC,aAAa,GAAG,MAAOV,MAAM,IAAK;EACtC,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC/B,GAAGf,OAAO,WAAW,EACrB;MAAEU;IAAO,CAAC,EACV;MACEM,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK;MAChC;IACF,CACF,CAAC;IACD,OAAOG,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACF,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACuB,GAAG,CAAC,GAAGtB,OAAO,WAAW,EAAE;MACtDgB,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMI,eAAe,GAAG,MAAOC,SAAS,IAAK;EAC3C,IAAI;IACF,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACuB,GAAG,CAAC,GAAGtB,OAAO,iBAAiBwB,SAAS,EAAE,EAAE;MACvER,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SAASlB,kBAAkB,EAAEQ,SAAS,EAAEW,aAAa,EAAEC,WAAW,EAAEE,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}